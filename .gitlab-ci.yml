default:
  image: node:16.20.2-buster

stages:
  - build-test
  - test
  - sonarqube-check
  - build-preprod
  - build-prod
  - deploy

dockerbuild_main-job:
  stage: build-test
  before_script:
    - docker login $CI_REGISTRY -u bonny.ophelie -p $GITLAB_PAT
  script:
    - docker build -t $IMAGE_NAME:${CI_COMMIT_SHORT_SHA} --no-cache --build-arg url=$NEXT_PUBLIC_BACKEND_URL .
    - docker push $IMAGE_NAME:${CI_COMMIT_SHORT_SHA}
  only:
    - main
  tags: [dockerfile]

cypress_eslint:
  image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
  stage: test
  script:
    - npm install --legacy-peer-deps
    - npm install eslint jest --legacy-peer-deps
    - npm run lint
    - npm run build
    - npm start &
    - npm test
    - npm run jest
  only:
    - main

sonarqube-check:
  stage: sonarqube-check
  image: 
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - merge_requests
    - main

dockerbuild_preprod:
  stage: build-preprod
  before_script:
    - docker login $CI_REGISTRY -u bonny.ophelie -p $GITLAB_PAT
  script:
    - docker build -t $IMAGE_NAME:pre-prod --no-cache --build-arg url="https://backendpreprod.obadasoussachaddad.fr" .
    - docker push $IMAGE_NAME:pre-prod
  only:
    - pre-prod
  tags: [dockerfile]

dockerbuild_prod:
  stage: build-prod
  before_script:
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_PAT
  script:
    - docker build -t bonnyophelie/frontend:prod --no-cache --build-arg url="https://backend.obadasoussachaddad.fr" .
    - docker push bonnyophelie/frontend:prod
  only:
    - prod
  tags: [dockerfile]
  
access_ec2_preprod:
  stage: deploy
  image: alpine

  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

  script:
    - ssh -o StrictHostKeyChecking=no admin@51.21.85.80 "./deploy.sh registry.gitlab.com/thedockerdwelers/frontend:pre-prod" 
  only: 
    - pre-prod

access_ec2_prod:
  stage: deploy
  image: alpine

  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

  script:
    - ssh -o StrictHostKeyChecking=no admin@16.16.55.245 "./deploy.sh bonnyophelie/frontend:prod"
  only:
    - prod
