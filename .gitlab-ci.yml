default:
  image: node:16.20.2-buster

stages:
  - test
  - sonarqube-check
  - build
  - deploy

cypress_eslint:
  image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
  stage: test

  script:
    - npm install
    - npm run lint
    - npm run build
    - npm start &
    - npm test

sonarqube-check:
  stage: sonarqube-check
  image: 
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - merge_requests
    - main

dockerbuild:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_PAT

  script: 
    - docker build -t bonnyophelie/frontend --no-cache .
    - docker push bonnyophelie/frontend
  
access_ec2:
  stage: deploy
  image: alpine

  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

  script:
    - ssh -o StrictHostKeyChecking=no admin@13.48.25.192 "./deploy.sh" 
